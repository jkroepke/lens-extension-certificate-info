name: Automated tag

on:
  issue_comment:
    types:
      - created
  pull_request:
    branches:
      - main
    types:
      - closed

permissions:
  contents: write
  id-token: write
  pull-requests: read

jobs:
  create-tag:
    name: tag

    runs-on: ubuntu-24.04
    environment: automated
    timeout-minutes: 10

    if: >
      (startsWith(github.event.issue.title, 'Automated npm version') && github.event.issue.state == 'closed' && github.event.comment.body
      == '/tag') || (startsWith(github.event.pull_request.title, 'Automated npm version') && github.event.pull_request.merged)

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: main

      - name: Get version from package.json
        id: package-json
        run: |
          echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      - name: Check if version is release
        id: check-version
        run: |
          if [[ "${{ steps.package-json.outputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "is_release=true" >> $GITHUB_OUTPUT
          else
            echo "is_release=false" >> $GITHUB_OUTPUT
          fi

      - uses: actions/create-github-app-token@0f859bf9e69e887678d5bbfbee594437cb440ffe # v2.1.0
        if: steps.check-version.outputs.is_release == 'true'
        id: app-token
        with:
          app-id: 1248576
          private-key: ${{ secrets.AUTOMATION_APP_PRIVATE_KEY }}

      - name: Create tag from the main branch
        if: steps.check-version.outputs.is_release == 'true'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const mainRef = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'heads/main',
            });
            const result = await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/v${{ steps.package-json.outputs.version }}',
              sha: mainRef.data.object.sha,
            });
            console.log(result);
          github-token: ${{ steps.app-token.outputs.token }}
