name: Automated biome migrate

on:
  issue_comment:
    types:
      - created
  push:
    branches:
      - main
    paths:
      - biome.jsonc
      - package.json
  schedule:
    - cron: 2 6 * * *
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  biome-migrate:
    name: biome migrate

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x64

    runs-on: ${{ matrix.os }}
    environment: automated
    timeout-minutes: 10

    if: >-
      github.event_name != 'issue_comment' || (startsWith(github.event.issue.title, 'Automated biome migrate') && contains(github.event.comment.body,
      '/rerun'))

    steps:
      - uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        id: app-token
        with:
          app-id: 1248576
          private-key: ${{ secrets.AUTOMATION_APP_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Setup node
        uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
          package-manager-cache: false

      - name: Setup pnpm
        run: corepack enable

      - name: Get pnpm cache directory
        shell: bash
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> ${GITHUB_ENV}

      - name: Use pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.pnpm_cache_dir }}
          key: ${{ matrix.os }}-${{ matrix.arch }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.arch }}-node-

      - name: Install pnpm dependencies
        id: install-pnpm
        run: timeout 300 pnpm install --color=always --prefer-offline --frozen-lockfile
        continue-on-error: true

      - name: Install pnpm dependencies (retry)
        if: steps.install-pnpm.outcome == 'failure'
        run: timeout 300 pnpm install --color=always --prefer-offline --frozen-lockfile

      - name: Run biome migrate
        run: pnpm biome:migrate | tee .github/pr_body.log

      - name: Check for changes
        run: |
          if git diff --exit-code; then
            echo "changes=false" >> $GITHUB_ENV
          else
            echo "changes=true" >> $GITHUB_ENV
          fi

      - name: Commit and push to branch
        if: env.changes == 'true'
        uses: EndBug/add-and-commit@a94899bca583c204427a224a7af87c02f9b325d5 # v9.1.4
        with:
          github_token: ${{ steps.app-token.outputs.token }}
          default_author: github_actions
          message: Automated biome migrate [skip ci]
          new_branch: automated/biome-migrate
          fetch: false
          push: origin automated/biome-migrate --set-upstream --force

      - name: Create pull request
        if: env.changes == 'true'
        run: |-
          if [[ $(gh pr view automated/biome-migrate --json state --jq .state || true) != "OPEN" ]]; then
            gh pr create \
              --head automated/biome-migrate \
              --title "Automated biome migrate [skip ci]" \
              --body-file .github/pr_body.log \
              --label automated \
              --label trunk
          else
            gh pr edit automated/biome-migrate \
              --title "Automated biome migrate [skip ci]" \
              --body-file .github/pr_body.log
          fi
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Close pull request
        if: env.changes == 'false'
        run: gh pr list --head automated/biome-migrate --json number --jq '.[].number' | xargs -rn1 gh pr close --delete-branch
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
