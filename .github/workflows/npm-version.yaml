name: Automated npm version

on:
  workflow_dispatch:
    inputs:
      newversion:
        description: New version (X.Y.Z | major | minor | patch | premajor | preminor | prepatch | prerelease)
        required: true
        default: prerelease
  release:
    types:
      - released

permissions:
  contents: write
  pull-requests: write

jobs:
  npm-version:
    name: npm version

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x64

    runs-on: ${{ matrix.os }}
    environment: automated
    timeout-minutes: 10
    steps:
      - uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        id: app-token
        with:
          app-id: 1248576
          private-key: ${{ secrets.AUTOMATION_APP_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v5
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Setup pnpm
        run: corepack enable

      - name: Setup node
        uses: actions/setup-node@v6
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install pnpm dependencies
        id: install-pnpm
        run: timeout 300 pnpm install --color=always --prefer-offline --frozen-lockfile
        continue-on-error: true

      - name: Install pnpm dependencies (retry)
        if: steps.install-pnpm.outcome == 'failure'
        run: timeout 300 pnpm install --color=always --prefer-offline --frozen-lockfile

      - name: Set version
        run: |
          set -eo pipefail
          pnpm bump-version "$newversion" | tee .github/update.log
          jq -r .version package.json > .github/version.log
          sed -e 's/\x1b\[[0-9;]*m//g' .github/update.log > .github/pr_body.log
        env:
          newversion: ${{ github.event.inputs.newversion || 'prerelease' }}

      - name: Update pnpm dependencies
        id: update-pnpm
        run: timeout 300 pnpm install --color=always --prefer-offline
        continue-on-error: true

      - name: Update pnpm dependencies (retry)
        if: steps.update-pnpm.outcome == 'failure'
        run: timeout 300 pnpm install --color=always --prefer-offline

      - name: Check for changes
        run: |
          if git diff --exit-code; then
            echo "changes=false" >> $GITHUB_ENV
          else
            echo "changes=true" >> $GITHUB_ENV
          fi

      - name: Commit and push to branch
        if: env.changes == 'true'
        uses: EndBug/add-and-commit@v9
        with:
          github_token: ${{ steps.app-token.outputs.token }}
          default_author: github_actions
          message: Automated npm version ${{ github.event.inputs.newversion || 'prerelease' }}
          new_branch: automated/npm-version
          fetch: false
          push: origin automated/npm-version --set-upstream --force

      - name: Create pull request
        if: env.changes == 'true'
        run: |-
          version=$(cat .github/version.log)
          if [[ $(gh pr view automated/npm-version --json state --jq .state || true) != "OPEN" ]]; then
            gh pr create \
              --head automated/npm-version \
              --title "Automated npm version v${version}" \
              --body-file .github/pr_body.log \
              --label automated
          else
            gh pr edit automated/npm-version \
              --title "Automated npm version v${version}" \
              --body-file .github/pr_body.log
          fi

          gh pr merge --auto --squash --delete-branch automated/npm-version
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Close pull request
        if: env.changes == 'false'
        run: gh pr list --head automated/npm-version --json number --jq '.[].number' | xargs -rn1 gh pr close --delete-branch
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
