name: Release

on:
  push:
    tags:
      - v*

permissions:
  contents: write
  id-token: write

jobs:
  release:
    name: release on ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x64
            ref: main

    runs-on: ${{ matrix.os }}
    environment: publishing

    env:
      VITE_PRESERVE_MODULES: "false"

    steps:
      - name: Checkout plugin
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Check if package version matches
        run: test "${GITHUB_REF_NAME}" = "v$(jq -r .version package.json)"

      - name: Setup node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: .nvmrc
          registry-url: https://registry.npmjs.org

      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Get pnpm cache directory
        shell: bash
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> ${GITHUB_ENV}

      - name: Use pnpm cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ${{ env.pnpm_cache_dir }}
          key: ${{ matrix.os }}-${{ matrix.arch }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.arch }}-node-

      - name: Install pnpm dependencies
        id: install-pnpm
        shell: bash
        run: pnpm install --color=always --prefer-offline --frozen-lockfile
        continue-on-error: true

      - name: Install pnpm dependencies (retry)
        if: steps.install-pnpm.outcome == 'failure'
        shell: bash
        run: pnpm install --color=always --prefer-offline --frozen-lockfile

      - name: Build packages
        run: pnpm --color=always --stream build

      - name: Pack packages
        run: pnpm --color=always --stream pack

      - name: Publish npm packages
        id: publish-npm
        run: |
          case "${GITHUB_REF_NAME}" in
            *-*) dist_tag=next;;
            *) dist_tag=latest;;
          esac
          pnpm --color=always publish -r \
            --no-git-checks \
            --tag ${dist_tag}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        continue-on-error: true

      - name: Publish npm packages (retry)
        id: publish-npm-2
        if: steps.publish-npm.outcome == 'failure'
        run: |
          case "${GITHUB_REF_NAME}" in
            *-*) dist_tag=next;;
            *) dist_tag=latest;;
          esac
          pnpm --color=always publish -r \
            --no-git-checks \
            --tag ${dist_tag}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        continue-on-error: true

      - name: Publish npm packages (retry 2)
        if: steps.publish-npm-2.outcome == 'failure'
        run: |
          case "${GITHUB_REF_NAME}" in
            *-*) dist_tag=next;;
            *) dist_tag=latest;;
          esac
          pnpm --color=always publish -r \
            --no-git-checks \
            --tag ${dist_tag}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        with:
          fail_on_unmatched_files: true
          files: |-
            *.tgz
