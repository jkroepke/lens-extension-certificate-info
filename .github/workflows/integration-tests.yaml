name: Integration tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"
  workflow_dispatch: {}

permissions:
  contents: read

env:
  kind_version: 0.30.0 # datasource=github-releases depName=kubernetes-sigs/kind
  kubernetes_version: 1.34.0 # datasource=docker depName=kindest/node

jobs:
  test-integration:
    name: "integration tests on ${{ matrix.os }} with Freelens ${{ matrix.freelens_version }}"

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x64
            freelens_version: v1.5.2
          - os: ubuntu-22.04
            arch: x64
            freelens_version: v1.6.1
          - os: ubuntu-22.04
            arch: x64
            freelens_version: main

    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    env:
      ELECTRON_CACHE: ${{ github.workspace }}/.cache/electron
      ELECTRON_BUILDER_CACHE: ${{ github.workspace }}/.cache/electron-builder
      PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/.cache/playwright

    steps:
      - name: Checkout plugin
        uses: actions/checkout@v5

      - name: Setup pnpm
        run: corepack enable

      - name: Setup node
        uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Disable pre post scripts for pnpm
        shell: bash
        run: pnpm config set enablePrePostScripts false

      - name: Install pnpm dependencies for extension
        id: install-pnpm-extension
        shell: bash
        run: timeout 300 pnpm install --color=always --prefer-offline --frozen-lockfile
        continue-on-error: true

      - name: Install pnpm dependencies for extension (retry)
        if: steps.install-pnpm-extension.outcome == 'failure'
        shell: bash
        run: timeout 300 pnpm install --color=always --prefer-offline --frozen-lockfile

      - name: Build plugin
        run: pnpm build

      - name: Pack plugin
        run: pnpm pack

      - name: Get extension path
        shell: bash
        run: echo "EXTENSION_PATH=$(find $(pwd) -name '*.tgz')" >> ${GITHUB_ENV}

      - name: Checkout app
        if: matrix.freelens_version != 'latest'
        uses: actions/checkout@v5
        with:
          repository: freelensapp/freelens
          ref: ${{ matrix.freelens_version }}
          path: freelens

      - name: Move app to upper directory
        shell: bash
        run: mv freelens ..

      - name: Get Electron version
        shell: bash
        run: echo "electron_version=$(yq -r .importers.freelens.devDependencies.electron.version ../freelens/pnpm-lock.yaml
          | sed 's/(.*)//')" >> $GITHUB_ENV

      - name: Get Electron Builder version
        shell: bash
        run: echo "electron_builder_version=$(yq -r .importers.freelens.devDependencies.electron-builder.version ../freelens/pnpm-lock.yaml
          | sed 's/(.*)//')" >> $GITHUB_ENV

      - name: Get Playwright version
        shell: bash
        run: echo "playwright_version=$(yq -r .importers.freelens.devDependencies.playwright.version ../freelens/pnpm-lock.yaml
          | sed 's/(.*)//')" >> $GITHUB_ENV

      - name: Use Electron cache
        uses: actions/cache@v4
        with:
          path: ${{ env.ELECTRON_CACHE }}
          key: ${{ matrix.os }}-${{ matrix.arch }}-electron-${{ env.electron_version }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.arch }}-electron-

      - name: Use Electron Builder cache
        uses: actions/cache@v4
        with:
          path: ${{ env.ELECTRON_BUILDER_CACHE }}
          key: ${{ matrix.os }}-${{ matrix.arch }}-electron-builder-${{ env.electron_builder_version }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.arch }}-electron-builder-

      - name: Use Playwright cache
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PLAYWRIGHT_BROWSERS_PATH }}
          key: ${{ matrix.os }}-${{ matrix.arch }}-playwright-${{ env.playwright_version }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.arch }}-playwright-

      - name: Install pnpm dependencies for app
        id: install-pnpm-app
        shell: bash
        run: cd ../freelens && timeout 300 pnpm install --color=always --prefer-offline --frozen-lockfile
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "1"
        continue-on-error: true

      - name: Install pnpm dependencies for app (retry)
        if: steps.install-pnpm-app.outcome == 'failure'
        shell: bash
        run: cd ../freelens && timeout 300 pnpm install --color=always --prefer-offline --frozen-lockfile
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "1"

      - name: Install Playwright with dependencies
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: cd ../freelens && pnpx playwright install --with-deps

      - name: Install Playwright's dependencies
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: cd ../freelens && pnpx playwright install-deps

      - name: Build app
        run: cd ../freelens && pnpm --color=always --stream build

      - name: Rebuild native packages for Electron
        run: cd ../freelens && pnpm --color=always electron-rebuild -a ${{ matrix.arch }}

      - name: Copy tests from plugin to app
        run: |
          rm -f ../freelens/freelens/integration/__tests__/*
          cp integration/__tests__/* ../freelens/freelens/integration/__tests__

      - name: Start KinD cluster (Linux)
        if: runner.os == 'Linux'
        uses: helm/kind-action@v1
        with:
          cluster_name: freelens
          version: v${{ env.kind_version }}
          node_image: kindest/node:v${{ env.kubernetes_version }}
          wait: 5m

      - name: Build extra resources
        id: build-resources
        run: cd ../freelens && pnpm --color=always build:resources
        continue-on-error: true

      - name: Build extra resources (retry)
        id: build-resources-2
        if: steps.build-resources.outcome == 'failure'
        run: cd ../freelens && pnpm --color=always build:resources
        continue-on-error: true

      - name: Build extra resources (retry 2)
        if: steps.build-resources-2.outcome == 'failure'
        run: cd ../freelens && pnpm --color=always build:resources

      - name: Build Electron app
        run: cd ../freelens && pnpm --color=always build:app dir --${{ matrix.arch }}

      - name: Run integration tests
        id: integration-tests-linux
        run: |
          cd ../freelens
          sudo chown root:root freelens/dist/linux-unpacked/chrome-sandbox
          sudo chmod 4755 freelens/dist/linux-unpacked/chrome-sandbox
          timeout 600 xvfb-run -a pnpm --color=always test:integration
        env:
          DEBUG: pw:browser
        continue-on-error: true

      - name: Run integration tests (retry)
        if: steps.integration-tests-linux.outcome == 'failure'
        run: |
          cd ../freelens
          sudo chown root:root freelens/dist/linux-unpacked/chrome-sandbox
          sudo chmod 4755 freelens/dist/linux-unpacked/chrome-sandbox
          timeout 600 xvfb-run -a pnpm --color=always test:integration
        env:
          DEBUG: pw:browser
